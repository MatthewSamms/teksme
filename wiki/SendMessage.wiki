#summary TèksML <outboundMessage> verb.
#labels Featured

<font size="3"><b>Making Social Texting Apps made easy with TèksMe API</b></font>

This document describes how to use TèksMe API to submit information through multiple channels including text messaging, Twitter, email etc. 

<font size="4"><b>Contents</b></font>

<wiki:toc max_depth="3" />

= Introduction =

People's communication preferences and habits have changed. People are seeking better ways to communicate and build bridges with friends and neighbors of other faiths. This API enables your apps to expand beyond the confines of single service providers, whether that are the phone company or a social network service.

= Send Message Parameters =

Here are the the *required parameters* in the HTTP GET or POST request:

|| *Field* || *Short description* || 
|| *from* || The source/sender address (a.k.a “Sender ID”) that the message will appear to come from. For mobile phones, the numbers are in [http://en.wikipedia.org/wiki/E.164 E.164 format]. ||
|| *to* || The destination address to whom this message is to be sent. If a handset, the number should be in [http://en.wikipedia.org/wiki/E.164 E.164 format]. ||
|| *channel* || This allows for engaging your users via text-based communication channels such as SMS, GTalk, Twitter, Yahoo, and nearly every IM network. For IM clients, you need to supply the appropriate credentials. ||
|| *shout* || The text content of the message. Note that the maximum individual short message sizes of 160 7-bit characters, 140 8-bit characters, or 70 16-bit characters (including spaces). ||

Here are the the *optional parameters* in the HTTP GET or POST request:

|| *Field* || *Short description* || 
|| *id* || For tracking purpose, thrid-party applications can define a message ID. Up to 34 alphanumeric characters with no spaces. || 
|| *date* || The date and time of the request, in [http://www.ietf.org/rfc/rfc2822.txt RFC 2822 format]. ||
|| *stopOnError* || Stop execution upon first error. || 
|| *schedule* || Specify the date and time, in [http://www.ietf.org/rfc/rfc2822.txt RFC 2822 format], when a message gets delivered. ||
|| *timeout* || The validity period, in minutes. The message will not be delivered if it is still queued on our gateway after this time period. ||
|| *delay* || Delays, in minutes, the delivery of a message. || 
|| *callback* || A relative or absolute URL. It enables your application to receive message delivery statuses via an HTTP, SOAP or XML callback which is posted to a URL of yours using the GET or POST method. This is done every time a message status is updated. ||
|| *concatenated* || It will span long messages across `<N>` messages where applicable. A maximum of 3 is recommended. One SMS will be sent for every 160 characters or 140 bytes. ||

= Endpoint URL =

{{{
http://api.teks.me/p/{profileId}/sendmsg
}}}


= HTTP GET =

You can send text messages and pictures or sounds to one or more recipients, by sending an HTTP GET request to its URI. The URI for a request has the following format:

{{{
http://api.teks.me/p/{profileId}/sendmsg?parameters
}}}

== Example ==

{{{
http://api.teks.me/p/{profileId}/sendmsg?oauth_token=YourToken
&channel=SMS
&shout=Hello%20from%20TeksMe%21
&to=Recipient(s)Phone 
&from=YourPhone
&oauth_consumer_key=YourConsumerKey
&oauth_signature_method=HMAC-SHA1
&oauth_timestamp=1297578530
&oauth_nonce=1297578530577906000
&oauth_version=1.0
&oauth_signature=YourSignature

}}}

= HTTP POST =

== TèksML `<`outboundMessage`>` ==

The `<`outboundMessage`>` verb sends a message to multiple channels with a single transmission, which saves valuable time.


== Example==

{{{

<?xml version="1.0" encoding="UTF-8"?>
<teks:Teks xmlns:teks="http://teksme.org/meta/1.0.0/teks">
	<outboundMessage>
		<from>+12023567865</from>
		<to>+12028754532</to>
		<channels>
			<channel>SMS</channel>
		</channels>
		<shout this="Hello from TeksMe Cloud!" />
	</outboundMessage>
</teks:Teks>

}}}